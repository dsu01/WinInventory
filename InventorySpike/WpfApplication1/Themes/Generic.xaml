<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:local="clr-namespace:SeaStar.Viewer"
    xmlns:controls="clr-namespace:SeaStar.Viewer.Controls"
    xmlns:converters="clr-namespace:SeaStar.Viewer.Converters"
    xmlns:xcad="http://schemas.xceed.com/wpf/xaml/avalondock"
    xmlns:xctk="http://schemas.xceed.com/wpf/xaml/toolkit"
    xmlns:mapControl="clr-namespace:MapControl;assembly=MapControl.WPF"
    xmlns:system="clr-namespace:System;assembly=mscorlib"
    xmlns:converters1="clr-namespace:Client.Converters"
    xmlns:local1="clr-namespace:Client.Controls"
    mc:Ignorable="d"
    >

    <!-- misc -->
    <system:Double x:Key="DefaultOpacity">0.75</system:Double>
    <system:Double x:Key="DefaultLessOpaqueOpacity">0.50</system:Double>
    <system:Double x:Key="DefaultLessLessOpaqueOpacity">0.25</system:Double>
    
    <!-- colors, brushes, etc -->
    <SolidColorBrush x:Key="WindowDefaultBrush" Color="#FFF0F0F0" />
    <SolidColorBrush x:Key="Blue" Color="#316AC5"/>
    <SolidColorBrush x:Key="BlueSecondary" Color="#98B5E2"/>
    <SolidColorBrush x:Key="BlueThird" Color="#CCDFFC"/>
    <SolidColorBrush x:Key="Orange" Color="Orange"/>
    <SolidColorBrush x:Key="OrangeTransparent" Color="Orange" Opacity="0.3"/>
    <SolidColorBrush x:Key="OrangeDisabled" Color="Orange" Opacity="0.15"/>
    <SolidColorBrush x:Key="LightGray" Color="#F4F4F4"/>
    <SolidColorBrush x:Key="ModalBorder" Color="SteelBlue"/>
    <SolidColorBrush x:Key="ModalBackground" Color="White"/>
    <SolidColorBrush x:Key="ToolbarBackgroundBrush" Color="#FF000000" Opacity="{StaticResource DefaultOpacity}"/>
    <SolidColorBrush x:Key="StatusBarBackgroundBrush" Color="Black" Opacity="{StaticResource DefaultOpacity}" />
    <SolidColorBrush x:Key="StatusBarBorderBrush" Color="Transparent"/>
    <SolidColorBrush x:Key="MapPathBackgroundBrush" Color="Transparent" Opacity="0.10"/>

    <SolidColorBrush x:Key="DataGrid_Background" Color="#FFFFFFFF" />
    <SolidColorBrush x:Key="DataGrid_Alternate_Background" Color="#FFD8D8D8" />
    <!--<SolidColorBrush x:Key="DataGrid_Foreground" Color="#FF363636" />-->
    <SolidColorBrush x:Key="DataGrid_Foreground" Color="#FF000000" />
    <SolidColorBrush x:Key="DataGrid_BorderBrush" Color="#FFA5ACB5" />
    <SolidColorBrush x:Key="DataGrid_HorizontalLinesBrush" Color="#F0F0F0" />
    <SolidColorBrush x:Key="DataGrid_VerticalLinesBrush" Color="#E6E6E6" />

    <LinearGradientBrush x:Key="NormalBrush" StartPoint="0,0" EndPoint="0,1">
        <GradientBrush.GradientStops>
            <GradientStopCollection>
                <GradientStop Color="#FFF" Offset="0.0"/>
                <GradientStop Color="#CCC" Offset="1.0"/>
            </GradientStopCollection>
        </GradientBrush.GradientStops>
    </LinearGradientBrush>

    <LinearGradientBrush x:Key="LightBrush" StartPoint="0,0" EndPoint="0,1">
        <GradientBrush.GradientStops>
            <GradientStopCollection>
                <GradientStop Color="#FFF" Offset="0.0"/>
                <GradientStop Color="#EEE" Offset="1.0"/>
            </GradientStopCollection>
        </GradientBrush.GradientStops>
    </LinearGradientBrush>

    <LinearGradientBrush x:Key="DarkBrush" StartPoint="0,0" EndPoint="0,1">
        <GradientBrush.GradientStops>
            <GradientStopCollection>
                <GradientStop Color="#FFF" Offset="0.0"/>
                <GradientStop Color="#AAA" Offset="1.0"/>
            </GradientStopCollection>
        </GradientBrush.GradientStops>
    </LinearGradientBrush>

    <LinearGradientBrush x:Key="PressedBrush" StartPoint="0,0" EndPoint="0,1">
        <GradientBrush.GradientStops>
            <GradientStopCollection>
                <GradientStop Color="#BBB" Offset="0.0"/>
                <GradientStop Color="#EEE" Offset="0.1"/>
                <GradientStop Color="#EEE" Offset="0.9"/>
                <GradientStop Color="#FFF" Offset="1.0"/>
            </GradientStopCollection>
        </GradientBrush.GradientStops>
    </LinearGradientBrush>

    <SolidColorBrush x:Key="DisabledForegroundBrush" Color="#888" />
    <SolidColorBrush x:Key="DisabledBackgroundBrush" Color="#EEE" />
    <SolidColorBrush x:Key="WindowBackgroundBrush" Color="#FFF" />
    <SolidColorBrush x:Key="SelectedBackgroundBrush" Color="#DDD" />

    <!-- Border Brushes -->
    <LinearGradientBrush x:Key="NormalBorderBrush" StartPoint="0,0" EndPoint="0,1">
        <GradientBrush.GradientStops>
            <GradientStopCollection>
                <GradientStop Color="#CCC" Offset="0.0"/>
                <GradientStop Color="#444" Offset="1.0"/>
            </GradientStopCollection>
        </GradientBrush.GradientStops>
    </LinearGradientBrush>

    <LinearGradientBrush x:Key="DefaultedBorderBrush" StartPoint="0,0" EndPoint="0,1">
        <GradientBrush.GradientStops>
            <GradientStopCollection>
                <GradientStop Color="#777" Offset="0.0"/>
                <GradientStop Color="#000" Offset="1.0"/>
            </GradientStopCollection>
        </GradientBrush.GradientStops>
    </LinearGradientBrush>

    <LinearGradientBrush x:Key="PressedBorderBrush" StartPoint="0,0" EndPoint="0,1">
        <GradientBrush.GradientStops>
            <GradientStopCollection>
                <GradientStop Color="#444" Offset="0.0"/>
                <GradientStop Color="#888" Offset="1.0"/>
            </GradientStopCollection>
        </GradientBrush.GradientStops>
    </LinearGradientBrush>

    <SolidColorBrush x:Key="DisabledBorderBrush" Color="#AAA" />
    <SolidColorBrush x:Key="SolidBorderBrush" Color="#888" />
    <SolidColorBrush x:Key="LightBorderBrush" Color="#AAA" />
    <!-- Border Brushes End -->


    <!-- Basic control stuff -->
    <Style x:Key="ScalarValue" TargetType="{x:Type Control}">
        <Setter Property="FontSize" Value="12" />
        <Setter Property="FontWeight" Value="Normal" />
        <Setter Property="Margin" Value="3 3 3 3" />
        <Setter Property="MinWidth" Value="21" />
        <Setter Property="MinHeight" Value="21" />
    </Style>

    <Style TargetType="{x:Type TextBox}" BasedOn="{StaticResource ScalarValue}">
        <Setter Property="IsTabStop" Value="True" />
        <Style.Triggers>
            <Trigger Property="IsReadOnly" Value="True">
                <Setter Property="IsTabStop" Value="False" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style TargetType="{x:Type ComboBox}" BasedOn="{StaticResource ScalarValue}">
        <Setter Property="IsTabStop" Value="True" />
        <Style.Triggers>
            <Trigger Property="IsReadOnly" Value="True">
                <Setter Property="IsTabStop" Value="False" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style TargetType="{x:Type DatePicker}" BasedOn="{StaticResource ScalarValue}">
    </Style>

    <Style TargetType="{x:Type xctk:DateTimePicker}" BasedOn="{StaticResource ScalarValue}">
    </Style>

    <Style TargetType="{x:Type CheckBox}" BasedOn="{StaticResource ScalarValue}">
    </Style>

    <Style TargetType="{x:Type TabControl}">
        <Setter Property="Background" Value="{StaticResource LightGray}"/>
        <Setter Property="BorderBrush" Value="{StaticResource BlueSecondary}"/>
        <Setter Property="BorderThickness" Value="2,2,2,2"/>
        <Setter Property="TabStripPlacement" Value="Top"/>
        <Setter Property="Margin" Value="5 5"/>
    </Style>

    <Style TargetType="{x:Type TabItem}">
        <Style.Triggers>
            <Trigger Property="IsFocused" Value="True">
                <Setter Property="Background" Value="{StaticResource Blue}"/>
                <Setter Property="Foreground" Value="White"/>
            </Trigger>
            <Trigger Property="IsFocused" Value="False">
                <Setter Property="Background" Value="{StaticResource LightGray}"/>
            </Trigger>
            <Trigger Property="IsSelected" Value="True">
                <Setter Property="Background" Value="{StaticResource Blue}"/>
                <Setter Property="Foreground" Value="Black"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <!--
    =================================================================
        DataGrid
    =================================================================
    -->
    <Style TargetType="{x:Type DataGrid}">
        <Setter Property="Background" Value="{DynamicResource DataGrid_Background}" />
        <Setter Property="AlternatingRowBackground" Value="{DynamicResource DataGrid_Alternate_Background}" />
        <Setter Property="Foreground" Value="{DynamicResource DataGrid_Foreground}" />
        <Setter Property="BorderBrush" Value="{DynamicResource DataGrid_BorderBrush}" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="RowDetailsVisibilityMode" Value="VisibleWhenSelected"/>
        <Setter Property="RowHeaderWidth" Value="16" />
        <Setter Property="RowHeight" Value="25" />
        <Setter Property="HeadersVisibility" Value="All"/>
        <Setter Property="CanUserAddRows" Value="False"/>
        <Setter Property="CanUserResizeRows" Value="False"/>
        <Setter Property="CanUserDeleteRows" Value="False"/>
        <Setter Property="ScrollViewer.PanningMode" Value="Both"/>
        <Setter Property="HorizontalGridLinesBrush" Value="{DynamicResource DataGrid_HorizontalLinesBrush}" />
        <Setter Property="VerticalGridLinesBrush" Value="{DynamicResource DataGrid_VerticalLinesBrush}" />
        <Setter Property="ScrollViewer.CanContentScroll" Value="True"/>
        <Setter Property="ScrollViewer.PanningMode" Value="Both"/>
        <!--<Setter Property="RowHeight" Value="22" />-->
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="RowValidationErrorTemplate">
            <Setter.Value>
                <ControlTemplate>
                    <Grid Margin="1,-2,0,-2"
                        ToolTip="{Binding RelativeSource={RelativeSource
                        FindAncestor, AncestorType={x:Type DataGridRow}},
                            Path=(Validation.Errors)[0].ErrorContent}">
                        <Ellipse StrokeThickness="0" Fill="Red"
                              Width="{TemplateBinding FontSize}"
                              Height="{TemplateBinding FontSize}" />
                        <TextBlock Text="!" FontSize="{TemplateBinding FontSize}"
                              FontWeight="Bold" Foreground="White"
                              HorizontalAlignment="Center"  VerticalAlignment="Center" />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="DataGridColumnHeader_CenterAlign" TargetType="DataGridColumnHeader" BasedOn="{StaticResource {x:Type DataGridColumnHeader}}">
        <Setter Property="HorizontalAlignment" Value="Stretch" />
        <Setter Property="HorizontalContentAlignment" Value="Center" />
    </Style>

    <Style x:Key="DataGridColumnHeader_LeftAlign" TargetType="DataGridColumnHeader" BasedOn="{StaticResource {x:Type DataGridColumnHeader}}">
        <Setter Property="HorizontalAlignment" Value="Left" />
        <Setter Property="HorizontalContentAlignment" Value="Left" />
    </Style>

    <Style TargetType="DataGridColumnHeader">
        <Setter Property="FontWeight" Value="Bold" />
        <Setter Property="Padding" Value="5 3" />
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="ToolTip" Value="{Binding Column.(ToolTipService.ToolTip), RelativeSource={RelativeSource Self}}" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style TargetType="DataGridRowHeader">
        <Setter Property="Background" Value="Transparent" />
    </Style>

    <Style TargetType="DataGridCell">
        <Style.Triggers>
            <Trigger Property="DataGridCell.IsSelected" Value="True">
                <Setter Property="Background" Value="#CCDAFF" />
                <Setter Property="Foreground" Value="Black" />
            </Trigger>
        </Style.Triggers>
        <Setter Property="Margin" Value="0" />
        <Setter Property="Padding" Value="0" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type DataGridCell}">
                    <!--<Grid Background="{TemplateBinding Background}"  Margin="2 0 4 0">-->
                    <Grid Background="{TemplateBinding Background}"  Margin="0 0">
                        <ContentPresenter VerticalAlignment="Center" />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="DisabledCellStyle" TargetType="{x:Type DataGridCell}">
        <Setter Property="Foreground" Value="Black" />
        <Style.Triggers>
            <Trigger Property="IsSelected" Value="True">
                <Setter Property="Background" Value="{x:Null}" />
                <Setter Property="BorderBrush" Value="{x:Null}" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <!-- converters -->
    <converters1:NegationConverter x:Key="NegationConverter" />
    <converters1:BoolToVisibilityConverter x:Key="BoolToHiddenConverter"
                                          TrueValue="Visible" FalseValue="Hidden" />
    <converters1:BoolToVisibilityConverter x:Key="BoolToHiddenInvConverter"
                                          TrueValue="Hidden" FalseValue="Visible" />
    <converters1:BoolToVisibilityConverter x:Key="BoolToCollapsedConverter"
                                          TrueValue="Visible" FalseValue="Collapsed" />
    <converters1:BoolToVisibilityConverter x:Key="BoolToCollapsedInvConverter" 
                                          TrueValue="Collapsed" FalseValue="Visible" />
    <!-- converters -->


    
</ResourceDictionary>

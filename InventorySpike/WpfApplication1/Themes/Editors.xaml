<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="clr-namespace:SeaStar.Viewer"
    xmlns:controls="clr-namespace:SeaStar.Viewer.Controls"
    xmlns:xctk="http://schemas.xceed.com/wpf/xaml/toolkit">

    <!--<ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="Generic.xaml" />
    </ResourceDictionary.MergedDictionaries>-->

    <!--<Style TargetType="Label">
        <Setter Property="Margin" Value="0,0,10,0"/>
    </Style>-->

    <Style x:Key="BaseTextBox" TargetType="TextBox">
        <Setter Property="Margin" Value="0,0,5,5"/>
        <Setter Property="CharacterCasing" Value="Normal"/>
        <Setter Property="BorderThickness" Value="2"/>
        <Setter Property="BorderBrush" Value="LightGray"/>
        <Setter Property="Validation.ErrorTemplate">
            <Setter.Value>
                <ControlTemplate>
                    <DockPanel LastChildFill="True">
                        <TextBlock DockPanel.Dock="Right" Text="!" Foreground="Red" FontSize="16" FontWeight="Bold" Margin="-10,2,0,0" ToolTip="{Binding ElementName=Adorner, Path=AdornedElement.(Validation.Errors)[0].ErrorContent}" />
                        <Border BorderBrush="Red" BorderThickness="1">
                            <AdornedElementPlaceholder x:Name="Adorner" />
                        </Border>
                    </DockPanel>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="BorderBrush" Value="{StaticResource BlueSecondary}"/>
            </Trigger>
            <Trigger Property="IsFocused" Value="True">
                <Setter Property="BorderBrush" Value="{StaticResource Blue}"/>
            </Trigger>
            <Trigger Property="Validation.HasError" Value="true">
                <Setter Property="ToolTip" Value="{Binding RelativeSource={x:Static RelativeSource.Self}, Path=(Validation.Errors)[0].ErrorContent}" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="CommonTextBox" TargetType="TextBox" BasedOn="{StaticResource BaseTextBox}">
        <Setter Property="FontSize" Value="12" />
        <Setter Property="FontWeight" Value="DemiBold" />
        <Setter Property="Width" Value="150"/>
        <Setter Property="Height" Value="25"/>
    </Style>

    <Style x:Key="BaseComboBox" TargetType="ComboBox">
        <Setter Property="IsReadOnly" Value="False"/>
        <Setter Property="IsEditable" Value="True"/>
        <Setter Property="Block.TextAlignment" Value="Left"/>
        <Setter Property="HorizontalContentAlignment" Value="Left"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Margin" Value="0,0,5,5"/>
        <Setter Property="Background" Value="White"/>
        <Setter Property="BorderThickness" Value="2"/>
        <Setter Property="BorderBrush" Value="LightGray"/>
        <Setter Property="Validation.ErrorTemplate">
            <Setter.Value>
                <ControlTemplate>
                    <DockPanel LastChildFill="True">
                        <TextBlock DockPanel.Dock="Right" Text="!" Foreground="Red" FontSize="16" FontWeight="Bold" Margin="6,2,0,0" ToolTip="{Binding ElementName=Adorner, Path=AdornedElement.(Validation.Errors)[0].ErrorContent}" TextWrapping="NoWrap" />
                        <Border BorderBrush="Red" BorderThickness="1">
                            <AdornedElementPlaceholder x:Name="Adorner" />
                        </Border>
                    </DockPanel>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="BorderBrush" Value="{StaticResource BlueSecondary}"/>
            </Trigger>
            <Trigger Property="IsFocused" Value="True">
                <Setter Property="BorderBrush" Value="{StaticResource Blue}"/>
            </Trigger>
            <Trigger Property="Validation.HasError" Value="true">
                <Setter Property="ToolTip" Value="{Binding RelativeSource={x:Static RelativeSource.Self}, Path=(Validation.Errors)[0].ErrorContent}" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="CommonComboBox" TargetType="ComboBox" BasedOn="{StaticResource BaseComboBox}">
        <Setter Property="FontSize" Value="12" />
        <Setter Property="FontWeight" Value="DemiBold" />
        <Setter Property="Width" Value="150"/>
        <Setter Property="Height" Value="30"/>
    </Style>

    <Style x:Key="BaseDatePicker" TargetType="DatePicker">
        <!--<Setter Property="behaviors:EditorBehavior.DefaultFillTimeValue" Value="Midnight" />-->
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Margin" Value="0,0,5,5"/>
        <Setter Property="BorderThickness" Value="2"/>
        <Setter Property="BorderBrush" Value="LightGray"/>
        <Setter Property="Validation.ErrorTemplate">
            <Setter.Value>
                <ControlTemplate>
                    <DockPanel LastChildFill="True">
                        <TextBlock DockPanel.Dock="Right" Text="!" Foreground="Red" FontSize="16" FontWeight="Bold" Margin="6,2,0,0" ToolTip="{Binding ElementName=Adorner, Path=AdornedElement.(Validation.Errors)[0].ErrorContent}" />
                        <Border BorderBrush="Red" BorderThickness="1">
                            <AdornedElementPlaceholder x:Name="Adorner" />
                        </Border>
                    </DockPanel>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="BorderBrush" Value="{StaticResource BlueSecondary}"/>
            </Trigger>
            <Trigger Property="IsFocused" Value="True">
                <Setter Property="BorderBrush" Value="{StaticResource Blue}"/>
            </Trigger>
            <Trigger Property="Validation.HasError" Value="true">
                <Setter Property="ToolTip" Value="{Binding RelativeSource={x:Static RelativeSource.Self}, Path=(Validation.Errors)[0].ErrorContent}" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="CommonDatePicker" TargetType="DatePicker" BasedOn="{StaticResource BaseDatePicker}">
        <Setter Property="FontSize" Value="12" />
        <Setter Property="FontWeight" Value="DemiBold" />
        <Setter Property="Width" Value="110"/>
        <Setter Property="Height" Value="32"/>
    </Style>

    <Style x:Key="BaseDateTimePicker" TargetType="xctk:DateTimePicker">
        <Setter Property="HorizontalContentAlignment" Value="Left"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Margin" Value="0,0,5,5"/>
        <Setter Property="BorderThickness" Value="2"/>
        <Setter Property="BorderBrush" Value="LightGray"/>
        <Setter Property="Validation.ErrorTemplate">
            <Setter.Value>
                <ControlTemplate>
                    <DockPanel LastChildFill="True">
                        <TextBlock DockPanel.Dock="Right" Text="!" Foreground="Red" FontSize="16" FontWeight="Bold" Margin="6,2,0,0" ToolTip="{Binding ElementName=Adorner, Path=AdornedElement.(Validation.Errors)[0].ErrorContent}" TextWrapping="NoWrap" />
                        <Border BorderBrush="Red" BorderThickness="1">
                            <AdornedElementPlaceholder x:Name="Adorner" />
                        </Border>
                    </DockPanel>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="BorderBrush" Value="{StaticResource BlueSecondary}"/>
            </Trigger>
            <Trigger Property="IsFocused" Value="True">
                <Setter Property="BorderBrush" Value="{StaticResource Blue}"/>
            </Trigger>
            <Trigger Property="Validation.HasError" Value="true">
                <Setter Property="ToolTip" Value="{Binding RelativeSource={x:Static RelativeSource.Self}, Path=(Validation.Errors)[0].ErrorContent}" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="CommonDateTimePicker" TargetType="xctk:DateTimePicker" BasedOn="{StaticResource BaseDateTimePicker}">
        <!--<Setter Property="FontWeight" Value="DemiBold" />-->
        <Setter Property="Width" Value="140"/>
        <Setter Property="Height" Value="25"/>
    </Style>

    <Style x:Key="BaseDoubleUpDown" TargetType="xctk:DoubleUpDown">
        <Setter Property="HorizontalContentAlignment" Value="Left"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Margin" Value="0,0,5,5"/>
        <Setter Property="BorderThickness" Value="2"/>
        <Setter Property="BorderBrush" Value="LightGray"/>
        <Setter Property="Validation.ErrorTemplate">
            <Setter.Value>
                <ControlTemplate>
                    <DockPanel LastChildFill="True">
                        <TextBlock DockPanel.Dock="Right" Text="!" Foreground="Red" FontSize="16" FontWeight="Bold" Margin="6,2,0,0" ToolTip="{Binding ElementName=Adorner, Path=AdornedElement.(Validation.Errors)[0].ErrorContent}" TextWrapping="NoWrap" />
                        <Border BorderBrush="Red" BorderThickness="1">
                            <AdornedElementPlaceholder x:Name="Adorner" />
                        </Border>
                    </DockPanel>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="BorderBrush" Value="{StaticResource BlueSecondary}"/>
            </Trigger>
            <Trigger Property="IsFocused" Value="True">
                <Setter Property="BorderBrush" Value="{StaticResource Blue}"/>
            </Trigger>
            <Trigger Property="Validation.HasError" Value="true">
                <Setter Property="ToolTip" Value="{Binding RelativeSource={x:Static RelativeSource.Self}, Path=(Validation.Errors)[0].ErrorContent}" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="CommonDoubleUpDown" TargetType="xctk:DoubleUpDown" BasedOn="{StaticResource BaseDoubleUpDown}">
        <!--<Setter Property="FontWeight" Value="DemiBold" />-->
        <Setter Property="Width" Value="140"/>
        <Setter Property="Height" Value="25"/>
    </Style>

    <Style x:Key="BaseSingleUpDown" TargetType="xctk:SingleUpDown">
        <Setter Property="HorizontalContentAlignment" Value="Left"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Margin" Value="0,0,5,5"/>
        <Setter Property="BorderThickness" Value="2"/>
        <Setter Property="BorderBrush" Value="LightGray"/>
        <Setter Property="Validation.ErrorTemplate">
            <Setter.Value>
                <ControlTemplate>
                    <DockPanel LastChildFill="True">
                        <TextBlock DockPanel.Dock="Right" Text="!" Foreground="Red" FontSize="16" FontWeight="Bold" Margin="6,2,0,0" ToolTip="{Binding ElementName=Adorner, Path=AdornedElement.(Validation.Errors)[0].ErrorContent}" TextWrapping="NoWrap" />
                        <Border BorderBrush="Red" BorderThickness="1">
                            <AdornedElementPlaceholder x:Name="Adorner" />
                        </Border>
                    </DockPanel>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="BorderBrush" Value="{StaticResource BlueSecondary}"/>
            </Trigger>
            <Trigger Property="IsFocused" Value="True">
                <Setter Property="BorderBrush" Value="{StaticResource Blue}"/>
            </Trigger>
            <Trigger Property="Validation.HasError" Value="true">
                <Setter Property="ToolTip" Value="{Binding RelativeSource={x:Static RelativeSource.Self}, Path=(Validation.Errors)[0].ErrorContent}" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="CommonSingleUpDown" TargetType="xctk:SingleUpDown" BasedOn="{StaticResource BaseSingleUpDown}">
        <!--<Setter Property="FontWeight" Value="DemiBold" />-->
        <Setter Property="Width" Value="140"/>
        <Setter Property="Height" Value="25"/>
    </Style>

    <Style x:Key="BaseIntegerUpDown" TargetType="xctk:IntegerUpDown">
        <Setter Property="HorizontalContentAlignment" Value="Left"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Margin" Value="0,0,5,5"/>
        <Setter Property="BorderThickness" Value="2"/>
        <Setter Property="BorderBrush" Value="LightGray"/>
        <Setter Property="Validation.ErrorTemplate">
            <Setter.Value>
                <ControlTemplate>
                    <DockPanel LastChildFill="True">
                        <TextBlock DockPanel.Dock="Right" Text="!" Foreground="Red" FontSize="16" FontWeight="Bold" Margin="6,2,0,0" ToolTip="{Binding ElementName=Adorner, Path=AdornedElement.(Validation.Errors)[0].ErrorContent}" TextWrapping="NoWrap" />
                        <Border BorderBrush="Red" BorderThickness="1">
                            <AdornedElementPlaceholder x:Name="Adorner" />
                        </Border>
                    </DockPanel>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="BorderBrush" Value="{StaticResource BlueSecondary}"/>
            </Trigger>
            <Trigger Property="IsFocused" Value="True">
                <Setter Property="BorderBrush" Value="{StaticResource Blue}"/>
            </Trigger>
            <Trigger Property="Validation.HasError" Value="true">
                <Setter Property="ToolTip" Value="{Binding RelativeSource={x:Static RelativeSource.Self}, Path=(Validation.Errors)[0].ErrorContent}" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="CommonIntegerUpDown" TargetType="xctk:IntegerUpDown" BasedOn="{StaticResource BaseIntegerUpDown}">
        <!--<Setter Property="FontWeight" Value="DemiBold" />-->
        <Setter Property="Width" Value="140"/>
        <Setter Property="Height" Value="25"/>
    </Style>

    <Style x:Key="BaseTimeSpanUpDown" TargetType="xctk:TimeSpanUpDown">
        <Setter Property="HorizontalContentAlignment" Value="Left"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Margin" Value="0,0,5,5"/>
        <Setter Property="BorderThickness" Value="2"/>
        <Setter Property="BorderBrush" Value="LightGray"/>
        <Setter Property="Validation.ErrorTemplate">
            <Setter.Value>
                <ControlTemplate>
                    <DockPanel LastChildFill="True">
                        <TextBlock DockPanel.Dock="Right" Text="!" Foreground="Red" FontSize="16" FontWeight="Bold" Margin="6,2,0,0" ToolTip="{Binding ElementName=Adorner, Path=AdornedElement.(Validation.Errors)[0].ErrorContent}" TextWrapping="NoWrap" />
                        <Border BorderBrush="Red" BorderThickness="1">
                            <AdornedElementPlaceholder x:Name="Adorner" />
                        </Border>
                    </DockPanel>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="BorderBrush" Value="{StaticResource BlueSecondary}"/>
            </Trigger>
            <Trigger Property="IsFocused" Value="True">
                <Setter Property="BorderBrush" Value="{StaticResource Blue}"/>
            </Trigger>
            <Trigger Property="Validation.HasError" Value="true">
                <Setter Property="ToolTip" Value="{Binding RelativeSource={x:Static RelativeSource.Self}, Path=(Validation.Errors)[0].ErrorContent}" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="CommonTimeSpanUpDown" TargetType="xctk:TimeSpanUpDown" BasedOn="{StaticResource BaseTimeSpanUpDown}">
        <Setter Property="Width" Value="140"/>
        <Setter Property="Height" Value="25"/>
    </Style>

    <Style x:Key="BaseMaskedTextBox" TargetType="xctk:MaskedTextBox">
        <Setter Property="HorizontalContentAlignment" Value="Left"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Margin" Value="0,0,5,5"/>
        <Setter Property="BorderThickness" Value="2"/>
        <Setter Property="BorderBrush" Value="LightGray"/>
        <Setter Property="Validation.ErrorTemplate">
            <Setter.Value>
                <ControlTemplate>
                    <DockPanel LastChildFill="True">
                        <TextBlock DockPanel.Dock="Right" Text="!" Foreground="Red" FontSize="16" FontWeight="Bold" Margin="6,2,0,0" ToolTip="{Binding ElementName=Adorner, Path=AdornedElement.(Validation.Errors)[0].ErrorContent}" TextWrapping="NoWrap" />
                        <Border BorderBrush="Red" BorderThickness="1">
                            <AdornedElementPlaceholder x:Name="Adorner" />
                        </Border>
                    </DockPanel>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="BorderBrush" Value="{StaticResource BlueSecondary}"/>
            </Trigger>
            <Trigger Property="IsFocused" Value="True">
                <Setter Property="BorderBrush" Value="{StaticResource Blue}"/>
            </Trigger>
            <Trigger Property="Validation.HasError" Value="true">
                <Setter Property="ToolTip" Value="{Binding RelativeSource={x:Static RelativeSource.Self}, Path=(Validation.Errors)[0].ErrorContent}" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="CommonMaskedTextBox" TargetType="xctk:MaskedTextBox" BasedOn="{StaticResource BaseMaskedTextBox}">
        <!--<Setter Property="FontWeight" Value="DemiBold" />-->
        <Setter Property="Width" Value="140"/>
        <Setter Property="Height" Value="25"/>
    </Style>

</ResourceDictionary>
